#!/bin/bash

magenta="\033[1;35m"
green="\033[1;32m"
white="\033[1;37m"
blue="\033[1;34m"
red="\033[1;31m"
black="\033[1;40;30m"
yellow="\033[1;33m"
cyan="\033[1;36m"
nc="\033[0m" # no color
yellow_bg="\033[1;43;33m"
white_bg="\033[1;47;37m"

# get init system
get_init() {
	init_sys="Not Found!"
	os=$(uname -o)
	if [[ $os = Android ]]; then
		init_sys="init.rc"
	elif ! pidof -q systemd; then
		if [[ -f "/sbin/openrc" ]]; then
			init_sys="OpenRC"
		else
			read -r init_sys < /proc/1/comm
		fi
	else
		init_sys="SystemD"
	fi
	echo "${init_sys}"
}

# fetch system from the OS: name, arch, kernel, ...
fetch_sys() {
	todo=$1
	if [[ $todo == "os" ]]; then
		os=$(uname -o)
		case ${os} in
			Android)
				echo "Android"
				;;
			*)
				echo $(source /etc/os-release && printf '%s\n' "${PRETTY_NAME}")
				;;
		esac
	elif [[ $todo == "arch" ]]; then
		echo $(uname -m)
	elif [[ $todo == "kernel" ]]; then
		echo $(uname -r)
	fi
}

# get total packages
get_total_pkgs() {
	pack=$(which {xbps-install,apk,apt,pacman,nix,dnf,rpm,dpkg,emerge} 2>&1 | grep -v "^which" | sed 's_.*/__')
	case ${pack} in
	"xbps-install")
		total=$(xbps-query -l | wc -l)
		;;
	"apk")
		total=$(apk search | wc -l)
		;;
	"apt")
		total=$(apt list --installed 2>/dev/null | wc -l)
		;;
	"pacman")
		total=$(pacman -Q | wc -l)
		;;
	"nix")
		total=$(nix-env -qa --installed "*" | wc -l)
		;;
	"dnf")
		total=$(dnf list installed | wc -l)
		;;
	"rpm")
		total=$(rpm -qa | wc -l)
		;;
	"emerge")
		total=$(qlist -I | wc -l)
		;;
	"")
		total="Unknown"
		;;
	esac

	echo "${total}"
}

get_mass_storage_stats() {
	storage="Error"
	if [[ "$1" == "available" ]]; then
		IFS=, read -r storage <<< "$(df -h / | awk '/^\//{print $2","}')"
	else # used
		IFS=, read -r storage <<< "$(df -h / | awk '/^\//{print $3","}')"
	fi
	echo "${storage}"
}

# Get Memory usage
get_ram() {
	free --mega | sed -n -E '2s/^[^0-9]*([0-9]+) *([0-9]+).*/'"${space}"'\2 \/ \1 MB/p'
}

# Get DE/WM
# Reference: https://github.com/unixporn/robbb/blob/master/fetcher.sh
get_de_wm() {
	wm="${XDG_CURRENT_DESKTOP#*:}"
	[ "$wm" ] || wm="$DESKTOP_SESSION"

	# for most WMs
	[ ! "$wm" ] && [ "$DISPLAY" ] && command -v xprop >/dev/null && {
		id=$(xprop -root -notype _NET_SUPPORTING_WM_CHECK)
		id=${id##* }
		wm=$(xprop -id "$id" -notype -len 100 -f _NET_WM_NAME 8t | grep '^_NET_WM_NAME' | cut -d\" -f 2)
	}

	# for non-EWMH WMs
	[ ! "$wm" ] || [ "$wm" = "LG3D" ] &&
		wm=$(ps -e | grep -m 1 -o \
			-e "sway" \
			-e "kiwmi" \
			-e "wayfire" \
			-e "sowm" \
			-e "catwm" \
			-e "fvwm" \
			-e "dwm" \
			-e "2bwm" \
			-e "monsterwm" \
			-e "tinywm" \
			-e "xmonad")

	echo "${wm}"
}

# total length: 42 chars (may vary)
echo
echo -e "\t\t  ${magenta}os${white}     $(fetch_sys 'os') $(fetch_sys 'arch')"
echo -e "\t\t  ${green}ker${white}    $(fetch_sys 'kernel')"
echo -e "      ⟋|､\t  ${cyan}pkgs${white}   $(get_total_pkgs)"
echo -e "     (°､ ｡ 7\t  ${blue}sh${white}     ${SHELL##*/}"
echo -e "     |､  ~ヽ\t  ${yellow}ram${white}    $(get_ram)"
echo -e "     じしf_,)〳\t  ${magenta}init${white}   $(get_init)"
echo -e "\t\t  ${green}de/wm${white}  $(get_de_wm)"
echo -e "\t\t  ${cyan}upt${white}    $(uptime -p | sed 's/up//')"
echo -e "\t\t  ${yellow}disk${white}   $(get_mass_storage_stats 'used') / $(get_mass_storage_stats 'available')"
echo
echo -e "\t    ${yellow}  ${yellow}${green}  ${green}${blue}  ${blue}${red}  ${red}${cyan}  ${cyan}"
echo -e "               ${nc}"
